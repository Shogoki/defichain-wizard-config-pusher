interface DFISeed {
    asArray: (passphrase: string) => Promise<string[]>;
    asString: (passphrase: string) => Promise<string>;
    asEncrypted: () => string;
}
/**
 * The Seed provides all operations for the seed management. It will implicitely encrypt and store the seed.
 *
 * This API only support addresses from the light wallet, which means that you will have to provide the 24 words as an array.
 */
declare class Seed implements DFISeed {
    private storage;
    /**
     * The Seed needs to be initialized with the seed and the passphrase.
     *
     * @param seed The seed to be stored - provided as string array of 24 words.
     * @param passphrase The passphrase to encrypt the seed in the storage location.
     *
     * @throws Error when the provided seed is not valid (array must have at least 24 words)
     */
    constructor(seed: string[], passphrase: string);
    /**
     * Returns the seed as decrypted array.
     *
     * Please don't call this method right after the instantiation of the class.
     *
     * It will crash - storing the encrypted seed during the instantiation might take 1-2 seconds.
     *
     * @param passphrase The passphrase to decrypt the seed.
     * @returns the seed as array.
     */
    asArray(passphrase: string): Promise<string[]>;
    /**
     * Returns the seed as decrypted comma-separated string.
     *
     * Please don't call this method right after the instantiation of the class.
     *
     * It will crash - storing the encrypted seed during the instantiation might take 1-2 seconds.
     *
     * @param passphrase The passphrase to decrypt the seed.
     * @returns the seed as comma-separated string.
     */
    asString(passphrase: string): Promise<string>;
    /**
     * Returns the encrypted seed.
     *
     * Please don't call this method right after the instantiation of the class.
     *
     * It will crash - storing the encrypted seed during the instantiation might take 1-2 seconds.
     *
     * @returns the encyrpted seed.
     */
    asEncrypted(): string;
}
export { Seed };
