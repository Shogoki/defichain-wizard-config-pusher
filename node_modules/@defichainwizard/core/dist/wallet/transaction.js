"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Transaction = void 0;
const dfifactory_1 = require("../blockchain/dfifactory");
class Transaction {
    constructor(config) {
        this.client = config.client;
        this.account = config.account;
        this.network = config.network;
    }
    send(data) {
        return __awaiter(this, void 0, void 0, function* () {
            const transaction = yield dfifactory_1.DFIFactory.sendCustomTransactionWithData(data, this.client, this.account, this.network);
            if (transaction.vin.length > 0)
                return transaction.vin[0].txid;
            throw Error("No transcation ID received!");
        });
    }
}
exports.Transaction = Transaction;
