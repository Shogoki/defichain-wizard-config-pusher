import { WhaleWalletAccount } from "@defichain/whale-api-wallet";
import { Seed, Wallet } from "../wallet";
/**
 * Provides some standard methods to interact with the JellyWallet API.
 */
declare class DFIFactory {
    static getAccount(dfiWallet: Wallet, seed: Seed, passphrase: string): Promise<WhaleWalletAccount>;
    /**
     * Returns an instance of the Jellywallet to interact with the wallet.
     *
     * @param seed The seed as 24-word-string-array.
     * @param network The network to use.
     * @param client the {@link WhaleApiClient}
     * @returns The Jellywallet object.
     */
    private static getWallet;
    /**
     * The DeFiChain Bip32 Options to use for this wallet.
     * @param network The network to use.
     * @returns The BIP32 options for the given DeFiChain network.
     */
    private static bip32Options;
}
export { DFIFactory };
