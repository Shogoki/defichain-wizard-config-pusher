/**
 * Raw mnemonic words encryption implementation resides in light wallet.
 */
declare class EncryptedMnemonicStorage {
    /**
     * jellyfish's PrivateKeyEncryption impl essentially work for infinite length of data
     */
    private readonly encryption;
    constructor();
    /**
     * Encrypts mnemonic words.
     *
     * @param {string[]} words
     * @param {string} passphrase
     */
    encrypt(words: string[], passphrase: string): Promise<string>;
    /**
     * Retrieve encrypted value from secure store, deserialize, decrypt, deserialize buffer (decryption result) into words array
     *
     * @param {string} passphrase
     * @returns {string[]}
     */
    decrypt(encrypted: string, passphrase: string): Promise<string[]>;
}
export declare const MnemonicStorage: EncryptedMnemonicStorage;
export {};
