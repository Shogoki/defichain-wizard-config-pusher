import { P2WPKHTxnBuilder } from "@defichain/jellyfish-transaction-builder/dist";
import { TransactionSegWit, CTransactionSegWit, Script } from "@defichain/jellyfish-transaction";
import { WhaleApiClient } from "@defichain/whale-api-client";
import { Rawtx } from "@defichain/whale-api-client/dist/api/rawtx";
/**
 * The configuration to send a transaction.
 */
interface TransactionConfig {
    txn: TransactionSegWit;
    initialWaitTime: number;
    waitTime: number;
    retries: number;
    client: WhaleApiClient;
}
/**
 * The Custom Transaction Builder, that actually builds the transaction based on the passed data.
 */
declare class CustomTXBuilder extends P2WPKHTxnBuilder {
    getCustomTx(data: string, changeScript: Script, prefix?: string): Promise<TransactionSegWit>;
    /**
     * Sends the actual RAW transaction
     *
     * @param rawTx The RAW Tx object to send
     * @param hex the object with the hex data
     * @returns The transaction id
     */
    sendRawTx: (rawtx: Rawtx, hex: any) => Promise<string>;
    /**
     * Triggers the RAW transaction.
     *
     * First waits some time before it starts (config.initialWaitTime) and then tries several times (config.retries) until successful.
     *
     * Will throw error if it failed after the defined number of retries.
     */
    sendTransaction(config: TransactionConfig): Promise<CTransactionSegWit>;
}
export { CustomTXBuilder };
