"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RegTest = exports.TestNet = exports.MainNet = exports.getNetwork = void 0;
/**
 * @param network name
 * @return Network specific DeFi configuration
 */
function getNetwork(network) {
    switch (network) {
        case 'mainnet':
            return exports.MainNet;
        case 'testnet':
            return exports.TestNet;
        case 'regtest':
            return exports.RegTest;
        default:
            throw new Error(`${network} network not found`);
    }
}
exports.getNetwork = getNetwork;
/**
 * MainNet specific DeFi configuration.
 */
exports.MainNet = {
    name: 'mainnet',
    bech32: {
        hrp: 'df'
    },
    bip32: {
        publicPrefix: 0x0488b21e,
        privatePrefix: 0x0488ade4
    },
    wifPrefix: 0x80,
    pubKeyHashPrefix: 0x12,
    scriptHashPrefix: 0x5a,
    messagePrefix: '\x15Defi Signed Message:\n'
};
/**
 * TestNet specific DeFi configuration.
 */
exports.TestNet = {
    name: 'testnet',
    bech32: {
        hrp: 'tf'
    },
    bip32: {
        publicPrefix: 0x043587cf,
        privatePrefix: 0x04358394
    },
    wifPrefix: 0xef,
    pubKeyHashPrefix: 0xf,
    scriptHashPrefix: 0x80,
    messagePrefix: '\x15Defi Signed Message:\n'
};
/**
 * RegTest specific DeFi configuration.
 */
exports.RegTest = {
    name: 'regtest',
    bech32: {
        hrp: 'bcrt'
    },
    bip32: {
        publicPrefix: 0x043587cf,
        privatePrefix: 0x04358394
    },
    wifPrefix: 0xef,
    pubKeyHashPrefix: 0x6f,
    scriptHashPrefix: 0xc4,
    messagePrefix: '\x15Defi Signed Message:\n'
};
//# sourceMappingURL=Network.js.map