/**
 * Networks available in DeFi Blockchain.
 */
export declare type NetworkName = Network['name'];
/**
 * Network specific DeFi configuration.
 * They can be found in DeFiCh/ain project in file chainparams.cpp, under base58Prefixes
 */
export interface Network {
    name: 'mainnet' | 'testnet' | 'regtest' | 'devnet';
    bech32: {
        /** bech32 human readable part */
        hrp: 'df' | 'tf' | 'bcrt';
    };
    bip32: {
        /** base58Prefixes.EXT_PUBLIC_KEY */
        publicPrefix: 0x0488b21e | 0x043587cf;
        /** base58Prefixes.EXT_SECRET_KEY */
        privatePrefix: 0x0488ade4 | 0x04358394;
    };
    /** base58Prefixes.SECRET_KEY */
    wifPrefix: 0x80 | 0xef;
    /** base58Prefixes.PUBKEY_ADDRESS */
    pubKeyHashPrefix: 0x12 | 0xf | 0x6f;
    /** base58Prefixes.SCRIPT_ADDRESS */
    scriptHashPrefix: 0x5a | 0x80 | 0xc4;
    /** For message signing. */
    messagePrefix: '\x15Defi Signed Message:\n';
}
/**
 * @param network name
 * @return Network specific DeFi configuration
 */
export declare function getNetwork(network: NetworkName): Network;
/**
 * MainNet specific DeFi configuration.
 */
export declare const MainNet: Network;
/**
 * TestNet specific DeFi configuration.
 */
export declare const TestNet: Network;
/**
 * RegTest specific DeFi configuration.
 */
export declare const RegTest: Network;
//# sourceMappingURL=Network.d.ts.map