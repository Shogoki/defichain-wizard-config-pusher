/// <reference types="node" />
import { OPCode } from '../opcode';
import { DfTx } from './dftx';
export * from './dftx_account';
export * from './dftx_balance';
export * from './dftx_governance';
export * from './dftx_masternode';
export * from './dftx_misc';
export * from './dftx_oracles';
export * from './dftx_pool';
export * from './dftx_price';
export * from './dftx_token';
export * from './dftx_loans';
export * from './dftx_vault';
export * from './dftx_unmapped';
export * from './dftx_icxorderbook';
export * from './dftx';
/**
 * @param {OPCode[]} stack to check if it is a dftx script
 */
export declare function isDeFiScript(stack: OPCode[]): boolean;
/**
 * @param {OPCode[]} stack to check and remap into OP_DEFI_TX if valid
 */
export declare function remapDeFiScript(stack: OPCode[]): OPCode[];
/**
 * DeFi Transaction wrapped as an OpCode
 */
export declare class OP_DEFI_TX extends OPCode {
    readonly tx: DfTx<any>;
    constructor(tx: DfTx<any>);
    asBuffer(): Buffer;
}
//# sourceMappingURL=index.d.ts.map