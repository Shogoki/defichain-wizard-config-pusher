import { BufferComposer, ComposableBuffer } from '@defichain/jellyfish-buffer';
/**
 * CreateMasternode DeFi Transaction
 */
export interface CreateMasternode {
    operatorType: number;
    operatorPubKeyHash: string;
    timelock?: number;
}
/**
 * Composable CreateMasternode, C stands for Composable.
 * Immutable by design, bi-directional fromBuffer, toBuffer deep composer.
 */
export declare class CCreateMasternode extends ComposableBuffer<CreateMasternode> {
    static OP_CODE: number;
    static OP_NAME: string;
    composers(cmn: CreateMasternode): BufferComposer[];
}
/**
 * ResignMasternode DeFi Transaction
 */
export interface ResignMasternode {
    nodeId: string;
}
/**
 * Composable ResignMasternode, C stands for Composable.
 * Immutable by design, bi-directional fromBuffer, toBuffer deep composer.
 */
export declare class CResignMasternode extends ComposableBuffer<ResignMasternode> {
    static OP_CODE: number;
    static OP_NAME: string;
    composers(cmn: ResignMasternode): BufferComposer[];
}
//# sourceMappingURL=dftx_masternode.d.ts.map