import BigNumber from 'bignumber.js';
import { BufferComposer, ComposableBuffer } from '@defichain/jellyfish-buffer';
import { Script } from '../../tx';
/**
 * @deprecated renamed to TokenBalanceUInt32
 */
export declare type TokenBalance = TokenBalanceUInt32;
/**
 * Known as "struct CBalances" in cpp.
 */
export interface TokenBalanceUInt32 {
    token: number;
    amount: BigNumber;
}
/**
 * Known as "struct CBalances" in cpp.
 *
 * Composable TokenBalance, C stands for Composable.
 * Immutable by design, bi-directional fromBuffer, toBuffer deep composer.
 */
export declare class CTokenBalance extends ComposableBuffer<TokenBalanceUInt32> {
    composers(tb: TokenBalanceUInt32): BufferComposer[];
}
export interface ScriptBalances {
    script: Script;
    balances: TokenBalanceUInt32[];
}
/**
 * Composable ScriptBalances, C stands for Composable.
 * Immutable by design, bi-directional fromBuffer, toBuffer deep composer.
 */
export declare class CScriptBalances extends ComposableBuffer<ScriptBalances> {
    composers(sb: ScriptBalances): BufferComposer[];
}
/**
 * Known as "struct CTokenAmount" in cpp.
 */
export interface TokenBalanceVarInt {
    token: number;
    amount: BigNumber;
}
/**
 * Known as "struct CTokenAmount" in cpp.
 *
 * Composable TokenBalanceVarInt, C stands for Composable.
 * Immutable by design, bi-directional fromBuffer, toBuffer deep composer.
 */
export declare class CTokenBalanceVarInt extends ComposableBuffer<TokenBalanceVarInt> {
    composers(tb: TokenBalanceVarInt): BufferComposer[];
}
//# sourceMappingURL=dftx_balance.d.ts.map