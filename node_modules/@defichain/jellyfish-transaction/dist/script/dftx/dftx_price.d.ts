import BigNumber from 'bignumber.js';
import { BufferComposer, ComposableBuffer } from '@defichain/jellyfish-buffer';
export interface CurrencyPair {
    token: string;
    currency: string;
}
/**
 * Composable CurrencyPair, C stands for Composable.
 * Immutable by design, bi-directional fromBuffer, toBuffer deep composer.
 */
export declare class CCurrencyPair extends ComposableBuffer<CurrencyPair> {
    composers(cp: CurrencyPair): BufferComposer[];
}
export interface TokenAmount {
    currency: string;
    amount: BigNumber;
}
/**
 * Composable TokenAmount, C stands for Composable.
 * Immutable by design, bi-directional fromBuffer, toBuffer deep composer.
 */
export declare class CTokenAmount extends ComposableBuffer<TokenAmount> {
    composers(tp: TokenAmount): BufferComposer[];
}
export interface TokenPrice {
    token: string;
    prices: TokenAmount[];
}
/**
 * Composable TokenPrice, C stands for Composable.
 * Immutable by design, bi-directional fromBuffer, toBuffer deep composer.
 */
export declare class CTokenPrice extends ComposableBuffer<TokenPrice> {
    composers(sb: TokenPrice): BufferComposer[];
}
//# sourceMappingURL=dftx_price.d.ts.map