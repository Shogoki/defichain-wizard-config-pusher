import { Script, TransactionSegWit, PoolAddLiquidity, PoolRemoveLiquidity, PoolCreatePair } from '@defichain/jellyfish-transaction';
import { P2WPKHTxnBuilder } from './txn_builder';
export declare class TxnBuilderLiqPool extends P2WPKHTxnBuilder {
    /**
     * Add to liquidity pool using token balances pair supplied in `addLiquidity`.from[0].balances.
     *
     * @param {PoolAddLiquidity} addLiquidity txn to create
     * @param {Script} changeScript to send unspent to after deducting the (converted + fees)
     * @throws {TxnBuilderError} if 'addLiquidity.from' length is not `1`
     * @throws {TxnBuilderError} if 'addLiquidity.from[0].balances' length is not `2`
     * @returns {Promise<TransactionSegWit>}
     */
    addLiquidity(addLiquidity: PoolAddLiquidity, changeScript: Script): Promise<TransactionSegWit>;
    /**
     * Remove from liquidity pool.
     *
     * @param {PoolRemoveLiquidity} removeLiquidity pool token p2pwkh scipt, token id and amount to remove
     * @param {Script} changeScript to send unspent to after deducting the (converted + fees)
     * @returns {Promise<TransactionSegWit>}
     */
    removeLiquidity(removeLiquidity: PoolRemoveLiquidity, changeScript: Script): Promise<TransactionSegWit>;
    /**
     * Create pool pair.
     *
     * @param {PoolCreatePair} create pool pair
     * @param {Script} changeScript to send unspent to after deducting the (converted + fees)
     * @returns {Promise<TransactionSegWit>}
     */
    create(create: PoolCreatePair, changeScript: Script): Promise<TransactionSegWit>;
}
//# sourceMappingURL=txn_builder_liq_pool.d.ts.map