export declare enum TxnBuilderErrorType {
    /**
     * No prevouts available to create a transaction
     */
    NO_PREVOUTS = 0,
    /**
     * Required balance is not enough to create a transaction
     */
    MIN_BALANCE_NOT_ENOUGH = 1,
    /**
     * Current fee is over the fixed MAX_FEE_RATE
     */
    OVER_MAX_FEE_RATE = 2,
    /**
     * Invalid fee rate
     */
    INVALID_FEE_RATE = 3,
    /**
     * Unable to sign transaction due to error in TransactionSigner
     */
    SIGN_TRANSACTION_ERROR = 4,
    /**
     * Invalid conversion output `TokenBalance`, must consist only valid DFI balance
     */
    INVALID_UTXOS_TO_ACCOUNT_OUTPUT = 5,
    /**
     * Invalid input `TokenBalances` array length must be one
     */
    INVALID_ADD_LIQUIDITY_INPUT = 6,
    /**
     * Invalid conversion input `TokenBalances`, must consist only valid DFI balance
     */
    INVALID_ACCOUNT_TO_UTXOS_INPUT = 7,
    /**
     * Invalid `AppointOracle` input
     */
    INVALID_APPOINT_ORACLE_INPUT = 8,
    /**
     * Invalid `UpdateOracle` input
     */
    INVALID_UPDATE_ORACLE_INPUT = 9,
    /**
     * Invalid public key length
     */
    INVALID_PUB_KEY_LENGTH = 10,
    /**
     * Invalid `CreateOrder` amountToFill
     */
    INVALID_ICX_CREATE_ORDER_AMOUNT_TO_FILL = 11,
    /**
     * Invalid `CreateVoc` amount, should be 0
     */
    INVALID_VOC_AMOUNT = 12,
    /**
     * Invalid `CreateVoc` address, should be an empty stack
     */
    INVALID_VOC_ADDRESS = 13
}
/**
 * Error while constructing a transaction.
 */
export declare class TxnBuilderError extends Error {
    readonly type: TxnBuilderErrorType;
    constructor(type: TxnBuilderErrorType, message: string);
}
//# sourceMappingURL=txn_builder_error.d.ts.map