import { Script, TransactionSegWit, SetLoanScheme, DestroyLoanScheme, SetDefaultLoanScheme, SetCollateralToken, SetLoanToken, UpdateLoanToken, CreateVault, UpdateVault, DepositToVault, WithdrawFromVault, CloseVault, TakeLoan, PaybackLoan, PaybackLoanV2, PlaceAuctionBid } from '@defichain/jellyfish-transaction';
import { P2WPKHTxnBuilder } from './txn_builder';
export declare class TxnBuilderLoans extends P2WPKHTxnBuilder {
    /**
     * Create or update a loan scheme. Currently requires Foundation Authorization.
     *
     * @param {SetLoanScheme} setLoanScheme txn to create
     * @param {Script} changeScript to send unspent to after deducting the (converted + fees)
     * @returns {Promise<TransactionSegWit>}
     */
    setLoanScheme(setLoanScheme: SetLoanScheme, changeScript: Script): Promise<TransactionSegWit>;
    /**
     * Destroy a loan scheme. Currently requires Foundation Authorization.
     *
     * @param {DestroyLoanScheme} destroyLoanScheme txn to create
     * @param {Script} changeScript to send unspent to after deducting the (converted + fees)
     * @returns {Promise<TransactionSegWit>}
     */
    destroyLoanScheme(destroyLoanScheme: DestroyLoanScheme, changeScript: Script): Promise<TransactionSegWit>;
    /**
     * Set default loan scheme. Currently requires Foundation Authorization.
     *
     * @param {SetDefaultLoanScheme} setDefaultLoanScheme txn to create
     * @param {Script} changeScript to send unspent to after deducting the (converted + fees)
     * @returns {Promise<TransactionSegWit>}
     */
    setDefaultLoanScheme(setDefaultLoanScheme: SetDefaultLoanScheme, changeScript: Script): Promise<TransactionSegWit>;
    /**
     * Set a collateral token. Currently requires Foundation Authorization.
     *
     * @param {SetCollateralToken} setCollateralToken txn to create
     * @param {Script} changeScript to send unspent to after deducting the (converted + fees)
     * @returns {Promise<TransactionSegWit>}
     */
    setCollateralToken(setCollateralToken: SetCollateralToken, changeScript: Script): Promise<TransactionSegWit>;
    /**
     * Set loan token. Currently requires Foundation Authorization.
     *
     * @param {SetLoanToken} setLoanToken txn to create
     * @param {Script} changeScript to send unspent to after deducting the (converted + fees)
     * @returns {Promise<TransactionSegWit>}
     */
    setLoanToken(setLoanToken: SetLoanToken, changeScript: Script): Promise<TransactionSegWit>;
    /**
     * Update loan token. Currently requires Foundation Authorization.
     *
     * @param {UpdateLoanToken} updateLoanToken txn to create
     * @param {Script} changeScript to send unspent to after deducting the (converted + fees)
     * @returns {Promise<TransactionSegWit>}
     */
    updateLoanToken(updateLoanToken: UpdateLoanToken, changeScript: Script): Promise<TransactionSegWit>;
    /**
     * Creates vault transaction.
     *
     * @param {CreateVault} createVault txn to create
     * @param {Script} changeScript to send unspent to after deducting the (converted + fees)
     * @returns {Promise<TransactionSegWit>}
     * @deprecated vault methods are moving to TxnBuilderVault
     */
    createVault(createVault: CreateVault, changeScript: Script): Promise<TransactionSegWit>;
    /**
     * Create update vault transaction.
     *
     * @param {UpdateVault} updateVault txn to create
     * @param {Script} changeScript to send unspent to after deducting the (converted + fees)
     * @returns {Promise<TransactionSegWit>}
     * @deprecated vault methods are moving to TxnBuilderVault
     */
    updateVault(updateVault: UpdateVault, changeScript: Script): Promise<TransactionSegWit>;
    /**
     * Deposit to vault transaction.
     *
     * @param {DepositToVault} depositToVault txn to create
     * @param {Script} changeScript to send unspent to after deducting the (converted + fees)
     * @returns {Promise<TransactionSegWit>}
     * @deprecated vault methods are moving to TxnBuilderVault
     */
    depositToVault(depositToVault: DepositToVault, changeScript: Script): Promise<TransactionSegWit>;
    /**
     * Withdraw from vault transaction.
     *
     * @param {withdrawFromVault} withdrawFromVault txn to create
     * @param {Script} changeScript to send unspent to after deducting the (converted + fees)
     * @returns {Promise<TransactionSegWit>}
     * @deprecated vault methods are moving to TxnBuilderVault
     */
    withdrawFromVault(withdrawFromVault: WithdrawFromVault, changeScript: Script): Promise<TransactionSegWit>;
    /**
     * Close a vault.
     *
     * @param {CloseVault} closeVault txn to create
     * @param {Script} changeScript to send unspent to after deducting the (converted + fees)
     * @returns {Promise<TransactionSegWit>}
     * @deprecated vault methods are moving to TxnBuilderVault
     */
    closeVault(closeVault: CloseVault, changeScript: Script): Promise<TransactionSegWit>;
    /**
     * Take loan transaction.
     *
     * @param {TakeLoan} takeLoan txn to create
     * @param {Script} changeScript to send unspent to after deducting the (converted + fees)
     * @returns {Promise<TransactionSegWit>}
     */
    takeLoan(takeLoan: TakeLoan, changeScript: Script): Promise<TransactionSegWit>;
    /**
     * PaybackLoan to vault transaction.
     *
     * @param {PaybackLoan} paybackLoan txn to create
     * @param {Script} changeScript to send unspent to after deducting the (converted + fees)
     * @returns {Promise<TransactionSegWit>}
     */
    paybackLoan(paybackLoan: PaybackLoan, changeScript: Script): Promise<TransactionSegWit>;
    /**
     * PaybackLoanV2 transaction.
     *
     * @param {PaybackLoanV2} paybackLoanV2 txn to create
     * @param {Script} changeScript to send unspent to after deducting the (converted + fees)
     * @returns {Promise<TransactionSegWit>}
     */
    paybackLoanV2(paybackLoanV2: PaybackLoanV2, changeScript: Script): Promise<TransactionSegWit>;
    /**
     * placeAuctionBid transaction.
     *
     * @param {PlaceAuctionBid} placeAuctionBid txn to create
     * @param {Script} changeScript to send unspent to after deducting the (converted + fees)
     * @returns {Promise<TransactionSegWit>}
     * @deprecated vault methods are moving to TxnBuilderVault
     */
    placeAuctionBid(placeAuctionBid: PlaceAuctionBid, changeScript: Script): Promise<TransactionSegWit>;
}
//# sourceMappingURL=txn_builder_loans.d.ts.map