import { Network } from '@defichain/jellyfish-network';
import { Script } from '@defichain/jellyfish-transaction';
export declare type AddressTypeDeprecated = 'Unknown' | 'P2PKH' | 'P2SH' | 'P2WPKH' | 'P2WSH';
export declare type Validator = () => boolean;
export declare abstract class Address {
    network: Network;
    utf8String: string;
    type: AddressTypeDeprecated;
    valid: boolean;
    validatorPassed: number;
    constructor(network: Network, utf8String: string, valid: boolean, type: AddressTypeDeprecated);
    abstract validators(): Validator[];
    abstract getScript(): Script;
    validate(): boolean;
}
/**
 * Default Address implementation when parsed address do not matched any type
 */
export declare class UnknownTypeAddress extends Address {
    constructor(network: Network, raw: string);
    validators(): Validator[];
    validate(): boolean;
    getScript(): Script;
}
//# sourceMappingURL=address.d.ts.map