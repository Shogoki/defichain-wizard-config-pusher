import { Network, NetworkName } from '@defichain/jellyfish-network';
import { Script } from '@defichain/jellyfish-transaction';
import { Bech32Address } from './bech32_address';
import { Validator } from './address';
export declare class P2WSH extends Bech32Address {
    static MAX_LENGTH: number;
    data: string;
    static SCRIPT_HASH_LENGTH: number;
    constructor(network: Network, utf8String: string, data: string, validated?: boolean);
    validators(): Validator[];
    getScript(): Script;
    /**
     * @param net network
     * @param hex data, redeem script (32 bytes, 64 characters)
     * @param witnessVersion default 0
     * @returns
     */
    static to(net: Network | NetworkName, hex: string, witnessVersion?: number): P2WSH;
}
//# sourceMappingURL=p2wsh.d.ts.map