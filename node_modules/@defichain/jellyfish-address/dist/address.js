"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnknownTypeAddress = exports.Address = void 0;
class Address {
    constructor(network, utf8String, valid, type) {
        this.network = network;
        this.utf8String = utf8String;
        this.valid = valid;
        this.type = type;
        this.validatorPassed = 0;
    }
    validate() {
        this.valid = true;
        this.validatorPassed = 0;
        this.validators().forEach((validator, index) => {
            const passed = validator();
            this.valid = this.valid && passed;
            if (passed) {
                this.validatorPassed += 1;
            }
        });
        return this.valid;
    }
}
exports.Address = Address;
/**
 * Default Address implementation when parsed address do not matched any type
 */
class UnknownTypeAddress extends Address {
    constructor(network, raw) {
        super(network, raw, false, 'Unknown');
    }
    validators() {
        return [];
    }
    validate() {
        return false;
    }
    getScript() {
        throw new Error('InvalidDeFiAddress');
    }
}
exports.UnknownTypeAddress = UnknownTypeAddress;
//# sourceMappingURL=address.js.map